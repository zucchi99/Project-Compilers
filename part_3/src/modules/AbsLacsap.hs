-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module AbsLacsap where

newtype Ident = Ident String
  deriving (Eq, Ord, Show, Read)

data Program = Program Ident Block
  deriving (Eq, Ord, Show, Read)

data Block = Block Declarations Statements
  deriving (Eq, Ord, Show, Read)

data Declarations = Declarations
  deriving (Eq, Ord, Show, Read)

data ConstDeclarations = ConstDeclarations Ident Expression
  deriving (Eq, Ord, Show, Read)

data VarDeclarations = VarDeclarations Ident Type
  deriving (Eq, Ord, Show, Read)

data FunctionDeclarations
    = FunctionDeclarations Ident Ident Type Type Block
  deriving (Eq, Ord, Show, Read)

data ProcedureDeclarations
    = ProcedureDeclarations Ident Ident Type Block
  deriving (Eq, Ord, Show, Read)

data Statements = Statements Statement
  deriving (Eq, Ord, Show, Read)

data Statement = Statement
  deriving (Eq, Ord, Show, Read)

data Expression = Expression
  deriving (Eq, Ord, Show, Read)

data Type = Type
  deriving (Eq, Ord, Show, Read)

